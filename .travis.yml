language: python

dist: xenial

env:
  global:
    - SDSS_LOCAL_SAS_MIRROR=/home/travis/build/henrysky
    - GAIA_TOOLS_DATA=/home/travis/build/henrysky
    - LASMOT_DR5_DATA=/home/travis/build/henrysky
  matrix:
    - LATEST_FLAG=true TF_VER="2.0.0b1" TFP_VER="tfp-nightly" PAPER_MODELS=false  # latest version config
    - LATEST_FLAG=true TF_VER="2.0.0b1" TFP_VER="tfp-nightly" PAPER_MODELS=true   # latest version config for model testing
    - LATEST_FLAG=true TF_VER="1.14.0" TFP_VER="tensorflow-probability==0.7.0" PAPER_MODELS=false   # previous version config
    - LATEST_FLAG=true TF_VER="1.14.0" TFP_VER="tensorflow-probability==0.7.0" PAPER_MODELS=truw   # previous version config
    - LATEST_FLAG=false TF_VER="1.13.2" TFP_VER="tensorflow-probability==0.6.0" PAPER_MODELS=false   # previous version config

python:
  - "3.7"

services:
  - xvfb  # configure a headless display to test plot generation

addons:
  apt:
    packages:
     - graphviz  # For model plotting

install:
  - pip install coverage
  - pip install coveralls
  - pip install tensorflow==$TF_VER  # because tensorflow is not in compulsory requirement
  - pip install $TFP_VER  # because tfp is not in compulsory requirement
  - pip install pydot
  - pip install graphviz
  - python setup.py install
  - python -c "from astroNN.config import tf_patch; tf_patch()"  # patching tensorflow if needed

script:
  - |
    if [ $LATEST_FLAG == true ] && [ $PAPER_MODELS == false ]; then coverage run --source=astroNN -m unittest \
    tests.test_numpy_tools tests.test_loss_func tests.test_layers \
    tests.test_apogee_tools tests.test_datasets tests.test_gaia_tools tests.test_lamost_tools  \
     tests.test_models tests.test_utilities; fi  # Run almost all tests for latest config
  - if [ $PAPER_MODELS == true ]; then coverage run --source=astroNN -m unittest tests.test_apogee_model tests.test_paper_models; fi  # Run papers models test
  - |
    if [ $LATEST_FLAG == false ]; then coverage run --source=astroNN -m unittest \
    tests.test_layers tests.test_loss_func tests.test_models tests.test_apogee_model; fi  # Run partial tests for non latest config

after_success:
  - coveralls # To upload reports to coveralls.io

notifications:
  slack:
      on_success: change